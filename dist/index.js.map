{"version":3,"file":"index.js","sources":["../src/utils/deepClone.ts","../node_modules/format-money-js/dist/format-money.js","../src/utils/format.ts","../src/math/add.ts","../src/map/FocusMapClass.ts","../src/index.ts"],"sourcesContent":["/**\r\n * 深拷贝\r\n * @param obj 需要深拷贝的对象\r\n * @returns\r\n */\r\nconst deepClone = (obj: Object) => {\r\n  // 不是引用类型或者是null的话直接返回\r\n  if (typeof obj !== \"object\" || typeof obj == null) {\r\n    return obj;\r\n  }\r\n  // 初始化结果\r\n  let result: object;\r\n  if (obj instanceof Array) {\r\n    result = [];\r\n  } else {\r\n    result = {};\r\n  }\r\n\r\n  for (let key in obj) {\r\n    // 保证不是原型上的属性\r\n    if (obj.hasOwnProperty(key)) {\r\n      // 递归调用\r\n      result[key] = deepClone(obj[key]);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport default deepClone;\r\n\r\n\r\n","\"use strict\";\n/*!\n * format-money-js v1.6.3\n * (c) 2020-2023 Yurii Derevych\n * URL: https://github.com/dejurin/format-money-js\n * Sponsored:\n * https://cr.today/\n * https://currencyrate.today/\n * Released under the BSD-2-Clause License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FormatMoney = void 0;\nclass FormatMoney {\n    constructor(options) {\n        this.options = options;\n        this.version = '1.6.3';\n        this.defaults = {\n            grouping: true,\n            separator: ',',\n            decimalPoint: '.',\n            decimals: 0,\n            symbol: '',\n            append: false,\n            leadZeros: true,\n        };\n        // Format\n        this.from = (value, options = {}, parse = false) => {\n            // Merge custom options\n            const customOptions = Object.assign(Object.assign({}, this.options), options);\n            // If value not number return undefined\n            if (typeof value !== 'number')\n                return undefined;\n            // If value is NaN\n            if (Number.isNaN(value))\n                return undefined;\n            // Set a sign for negative number\n            let negativeSign = (value < 0) ? '-' : '';\n            let result;\n            let left;\n            let body;\n            let prefix = '';\n            let suffix = '';\n            result = Math.abs(value).toFixed(customOptions.decimals);\n            if (parseFloat(result) === 0 || result === '0') {\n                negativeSign = '';\n            }\n            if (!customOptions.leadZeros) {\n                const resultFloat = parseFloat(result);\n                result = resultFloat.toString();\n            }\n            const resultArr = result.split('.');\n            [left] = resultArr;\n            const right = resultArr.length > 1 ? customOptions.decimalPoint + resultArr[1] : '';\n            if (customOptions.grouping) {\n                body = '';\n                for (let i = 0, len = left.length; i < len; i += 1) {\n                    if (i !== 0 && (i % 3) === 0) {\n                        body = customOptions.separator + body;\n                    }\n                    body = left[len - i - 1] + body;\n                }\n                left = body;\n            }\n            if (customOptions.append) {\n                suffix = customOptions.symbol;\n            }\n            else {\n                prefix = customOptions.symbol;\n            }\n            if (parse) {\n                return {\n                    source: value,\n                    negative: (value < 0),\n                    fullAmount: left + right,\n                    amount: left,\n                    decimals: right,\n                    symbol: customOptions.symbol,\n                };\n            }\n            return negativeSign + prefix + left + right + suffix;\n        };\n        // Unformat\n        this.un = (value, options) => {\n            // Merge custom options\n            const customOptions = Object.assign(Object.assign({}, this.options), options);\n            if (typeof value === 'number')\n                return value;\n            if (typeof value !== 'string')\n                return undefined;\n            // Build regex to strip out everything except digits, decimal point and minus sign:\n            const regex = new RegExp(`[^0-9-${customOptions.decimalPoint}]`, 'g');\n            const unFormatted = parseFloat((value)\n                .replace(/\\((?=\\d+)(.*)\\)/, '-$1') // replace bracketed values with negatives\n                .replace(regex, '') // strip out any cruft\n                .replace(`${customOptions.decimalPoint}`, '.'));\n            return !Number.isNaN(unFormatted) ? unFormatted : 0;\n        };\n        // Merge options\n        this.options = Object.assign(Object.assign({}, this.defaults), options);\n    }\n}\nexports.FormatMoney = FormatMoney;\n//# sourceMappingURL=format-money.js.map","import { FormatMoney } from \"format-money-js\";\r\n\r\nconst fm = new FormatMoney({\r\n  decimals: 2,\r\n});\r\n\r\nconst fmtMoney = function (num:number):string{\r\n    return String(fm.from(num, { symbol: '$' }));\r\n}\r\n\r\nexport default fmtMoney;","const add = function (a:number, b:number):number{\r\n    return a + b;\r\n}\r\n\r\nexport default add;","export class FocusMapClass {\r\n    init (element:string, url:string){\r\n        url = url || 'http://124.133.19.202:18090/iserver/services/3D-local3DCache-huanghedadaowubiaoduan220704/rest/realspace';\r\n        // @ts-ignore\r\n        var viewer = new Cesium.Viewer(element, {infoBox:false});\r\n        //使用本地的一张图片初始化地球，建议图片长宽比2:1\r\n        // viewer.imageryLayers.addImageryProvider(\r\n        //     // @ts-ignore\r\n        //     new Cesium.SingleTileImageryProvider({\r\n        //         url: img ?  img : \"../images/worldimage.jpg\",\r\n        //     })\r\n        // );\r\n\r\n        var scene = viewer.scene;\r\n        scene.open(url);\r\n    }\r\n}","import deepClone from \"./utils/deepClone\";\r\nimport fmtMoney from './utils/format';\r\nimport add from \"./math/add\";\r\nimport { FocusMapClass } from \"./map/FocusMapClass\";\r\n\r\nexport const Focus = {\r\n  deepClone, fmtMoney, add, FocusMapClass\r\n};\r\n"],"names":["FormatMoney","constructor","options","version","defaults","grouping","separator","decimalPoint","decimals","symbol","append","leadZeros","from","value","parse","customOptions","Object","assign","undefined","Number","isNaN","negativeSign","result","left","body","prefix","suffix","Math","abs","toFixed","parseFloat","resultFloat","toString","resultArr","split","right","length","i","len","source","negative","fullAmount","amount","un","regex","RegExp","unFormatted","replace","exports"],"mappings":"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","x_google_ignoreList":[1]}